//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLDT
{
    using System;
    using System.Collections.Generic;
    
    public partial class ChiTietDonHang : BaseModel
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public ChiTietDonHang()
        {
            this.ChiTietHangHoas = new HashSet<ChiTietHangHoa>();
        }
    
        private long _id;
    	public long Id 
    	{ 
    		get { return _id; } 
    		set
    		{
    			if (value != _id) {
    				_id = value;
    				 OnPropertyChanged("Id");
    			}
    		} 
    	}
    
        private long _authorId;
    	public long AuthorId 
    	{ 
    		get { return _authorId; } 
    		set
    		{
    			if (value != _authorId) {
    				_authorId = value;
    				 OnPropertyChanged("AuthorId");
    			}
    		} 
    	}
    
        private Nullable<long> _createdDate;
    	public Nullable<long> CreatedDate 
    	{ 
    		get { return _createdDate; } 
    		set
    		{
    			if (value != _createdDate) {
    				_createdDate = value;
    				 OnPropertyChanged("CreatedDate");
    			}
    		} 
    	}
    
        private Nullable<long> _modifiedDate;
    	public Nullable<long> ModifiedDate 
    	{ 
    		get { return _modifiedDate; } 
    		set
    		{
    			if (value != _modifiedDate) {
    				_modifiedDate = value;
    				 OnPropertyChanged("ModifiedDate");
    			}
    		} 
    	}
    
        private bool _isActived;
    	public bool IsActived 
    	{ 
    		get { return _isActived; } 
    		set
    		{
    			if (value != _isActived) {
    				_isActived = value;
    				 OnPropertyChanged("IsActived");
    			}
    		} 
    	}
    
        private long _donHangId;
    	public long DonHangId 
    	{ 
    		get { return _donHangId; } 
    		set
    		{
    			if (value != _donHangId) {
    				_donHangId = value;
    				 OnPropertyChanged("DonHangId");
    			}
    		} 
    	}
    
        private long _hangHoaId;
    	public long HangHoaId 
    	{ 
    		get { return _hangHoaId; } 
    		set
    		{
    			if (value != _hangHoaId) {
    				_hangHoaId = value;
    				 OnPropertyChanged("HangHoaId");
    			}
    		} 
    	}
    
        private long _donGia;
    	public long DonGia 
    	{ 
    		get { return _donGia; } 
    		set
    		{
    			if (value != _donGia) {
    				_donGia = value;
    				 OnPropertyChanged("DonGia");
    			}
    		} 
    	}
    
        private long _soLuong;
    	public long SoLuong 
    	{ 
    		get { return _soLuong; } 
    		set
    		{
    			if (value != _soLuong) {
    				_soLuong = value;
    				 OnPropertyChanged("SoLuong");
    			}
    		} 
    	}
    
    
        public virtual UserAccount UserAccount { get; set; }
        public virtual DonHang DonHang { get; set; }
        public virtual KhoHang KhoHang { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ChiTietHangHoa> ChiTietHangHoas { get; set; }
    }
}
